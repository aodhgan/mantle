package tssreward

import (
	"github.com/bitdao-io/bitnetwork/l2geth/common"
	"github.com/bitdao-io/bitnetwork/l2geth/core/rawdb"
	"github.com/bitdao-io/bitnetwork/l2geth/core/state"
	"github.com/bitdao-io/bitnetwork/l2geth/core/vm"
	"github.com/bitdao-io/bitnetwork/l2geth/params"
	"github.com/bitdao-io/bitnetwork/l2geth/rollup/dump"
	"github.com/stretchr/testify/require"
	"math/big"
	"testing"
)

func TestUpdateTssRewardData(t *testing.T) {

	statedb, _ := state.New(common.Hash{}, state.NewDatabase(rawdb.NewMemoryDatabase()))
	tssCode := []byte("0x608060405234801561001057600080fd5b50604051610dc9380380610dc983398101604081905261002f91610078565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b610d08806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80632c79db1111610081578063cfb550f11161005b578063cfb550f1146101ad578063e04f6e35146101b5578063fad9aba3146101c857600080fd5b80632c79db111461017b5780633ccfd60b146101835780638da5cb5b1461018d57600080fd5b806319d509a1116100b257806319d509a1146101245780631a39d8ef1461012d57806327c8f8351461013657600080fd5b80630b50cd3e146100ce57806310a7fd7b146100f6575b600080fd5b6100e16100dc366004610a4a565b6101d1565b60405190151581526020015b60405180910390f35b610116610104366004610a6c565b60006020819052908152604090205481565b6040519081526020016100ed565b61011660035481565b61011660055481565b6001546101569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b6101166103b3565b61018b61044c565b005b6002546101569073ffffffffffffffffffffffffffffffffffffffff1681565b61018b6105da565b61018b6101c3366004610a85565b61077e565b61011660045481565b60015460009073ffffffffffffffffffffffffffffffffffffffff163314610280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f747373207265776172642063616c6c206d65737361676520756e61757468656e60448201527f746963617465640000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600554471015610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f62616c616e6365207265636f726420616e6420636f6e74726163742062616c6160448201527f6e636520617265206e6f7420657175616c0000000000000000000000000000006064820152608401610277565b600354610320906001610b49565b8314610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f626c6f636b2069642075706461746520696c6c6567616c0000000000000000006044820152606401610277565b600383905560055461039a9083610a1f565b6005555060009182526020829052604090912055600190565b6000600554471015610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f62616c616e6365207265636f726420616e6420636f6e74726163742062616c6160448201527f6e636520617265206e6f7420657175616c0000000000000000000000000000006064820152608401610277565b504790565b60025473ffffffffffffffffffffffffffffffffffffffff1633146104f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460448201527f68697320636f6e747261637400000000000000000000000000000000000000006064820152608401610277565b600554471015610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f62616c616e6365207265636f726420616e6420636f6e74726163742062616c6160448201527f6e636520617265206e6f7420657175616c0000000000000000000000000000006064820152608401610277565b600060055547156105d85760025460405173ffffffffffffffffffffffffffffffffffffffff909116904780156108fc02916000818181858888f193505050501580156105d6573d6000803e3d6000fd5b505b565b60025473ffffffffffffffffffffffffffffffffffffffff163314610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460448201527f68697320636f6e747261637400000000000000000000000000000000000000006064820152608401610277565b600554471015610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f62616c616e6365207265636f726420616e6420636f6e74726163742062616c6160448201527f6e636520617265206e6f7420657175616c0000000000000000000000000000006064820152608401610277565b6004546005546107239082610a32565b600555600060045580156105d65760025460045460405173ffffffffffffffffffffffffffffffffffffffff9092169181156108fc0291906000818181858888f1935050505015801561077a573d6000803e3d6000fd5b5050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f747373207265776172642063616c6c206d65737361676520756e61757468656e60448201527f74696361746564000000000000000000000000000000000000000000000000006064820152608401610277565b6005544710156108b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f62616c616e6365207265636f726420616e6420636f6e74726163742062616c6160448201527f6e636520617265206e6f7420657175616c0000000000000000000000000000006064820152608401610277565b6000848152602081905260408120549080865b8663ffffffff168110156109d8576108e28486610a3e565b60008981526020819052604081208190559093505b8581101561099f57600087878381811061091357610913610b61565b90506020020160208101906109289190610bb9565b90506109348486610a1f565b6005549094506109449086610a32565b60055560405173ffffffffffffffffffffffffffffffffffffffff82169086156108fc029087906000818181858888f1935050505015801561098a573d6000803e3d6000fd5b5050808061099790610bd4565b9150506108f7565b5060006109ac8584610a32565b905080156109c5576004546109c19082610a1f565b6004555b50806109d081610bd4565b9150506108ca565b507ff630cba6d450d736e85735388d4fe67a177b8a3685cdd7dee2bea7727b47860a87878787604051610a0e9493929190610c0d565b60405180910390a150505050505050565b6000610a2b8284610b49565b9392505050565b6000610a2b8284610c80565b6000610a2b8284610c97565b60008060408385031215610a5d57600080fd5b50508035926020909101359150565b600060208284031215610a7e57600080fd5b5035919050565b60008060008060608587031215610a9b57600080fd5b84359350602085013563ffffffff81168114610ab657600080fd5b9250604085013567ffffffffffffffff80821115610ad357600080fd5b818701915087601f830112610ae757600080fd5b813581811115610af657600080fd5b8860208260051b8501011115610b0b57600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610b5c57610b5c610b1a565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114610bb457600080fd5b919050565b600060208284031215610bcb57600080fd5b610a2b82610b90565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0657610c06610b1a565b5060010190565b600060608201868352602063ffffffff871681850152606060408501528185835260808501905086925060005b86811015610c735773ffffffffffffffffffffffffffffffffffffffff610c6085610b90565b1682529282019290820190600101610c3a565b5098975050505050505050565b600082821015610c9257610c92610b1a565b500390565b600082610ccd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220a51ec743c0bb2b95aac6f7675b0aa3cbda567cf1153f306a8933bd643a1dc0cd64736f6c63430008090033")
	statedb.SetCode(dump.L2ExcuteFeeWallet, tssCode)
	vmctx := vm.Context{
		CanTransfer: func(vm.StateDB, common.Address, *big.Int) bool { return true },
		Transfer:    func(vm.StateDB, common.Address, common.Address, *big.Int) {},
	}

	statedb.Finalise(true) // Push the state into the "original" slot

	vmenv := vm.NewEVM(vmctx, statedb, params.AllEthashProtocolChanges, vm.Config{})
	zeroAddress := vm.AccountRef(common.Address{})
	data2, err := PacketQueryData()
	require.Nil(t, err)
	ret, _, err := vmenv.Call(zeroAddress, dump.L2ExcuteFeeWallet, data2, 450, big.NewInt(0))
	require.Nil(t, err)
	t.Logf("ret:%v", string(ret))

}
